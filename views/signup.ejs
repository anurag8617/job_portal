<!doctype html>
<html lang="en">
  <head>
    <title>job_portels</title>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <style>
        canvas{
            /* background-color: #09453a; */
            /* background: linear-gradient(0deg, #3498db, #e74c3c); */
            /* background: linear-gradient(135deg, #0d0d2b, #1b1b3a, #2d2d52, #050014); */
            background: radial-gradient(circle at 30% 30%, rgba(110, 30, 150, 0.6), transparent),
            radial-gradient(circle at 70% 70%, rgba(60, 130, 180, 0.6), transparent),
            #050014;
        }
    </style>
  </head>
  <body>

    <div class="row">
      <canvas class="col-6"></canvas> 

    <div class="col-4 ml-auto mr-auto ">

            <div class="" id="UsermodelRegister" tabindex="-1" role="dialog" aria-labelledby="modelTitleId" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">User Registration</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                        </div>
                        <div class="modal-body">
                            <form action="/register" method="post">
                            <div class="group mb-5">
                                <input required type="text" name="name" class="input">
                                <span class="highlight"></span>
                                <span class="bar"></span>
                                <label>Name</label>
                            </div>
                            <div class="group mb-5">
                                <input required type="email" name="email" class="input">
                                <span class="highlight"></span>
                                <span class="bar"></span>
                                <label>Email</label>
                            </div>

                            <div class="group mb-5">
                                <input required type="text" name="password" class="input">
                                <span class="highlight"></span>
                                <span class="bar"></span>
                                <label>Password</label>
                            </div>
                                <div class="form-group">
                                Gender
                                <select class="form-control" name="gender" id="">
                                    <option>male</option>
                                    <option>female</option>
                                </select>
                                </div>
                                <div class="form-group">
                                Address
                                <textarea class="form-control" name="address" id="" rows="3"></textarea>
                                <small id="emailHelpId" class="form-text text-muted">*</small>
                                </div>
                                <button type="submit" class="btn btn-primary btn-block">Submit</button>
                            </form>
                        </div>
                        
                    </div>
                </div>
            </div>

      </div>
    </div>
      
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script>
    const canvas = document.querySelector('canvas');
    canvas.height = window.innerHeight;
    canvas.width = window.innerWidth/2;

    const c = canvas.getContext('2d');

    // c.beginPath()
    // c.arc(800, 300, 100, 2*Math.PI, false);
    // c.stroke()

    var mouse={
        x:undefined,
        y:undefined
    };
    var maxR =30;
    var colorArray =[
        '#89B482',
        '#97C68F',
        '#A6DA9D',
        '#001eff',
        '#B7F0AD',
        '#D2FF96',
        '#050A30',
        '#000C66',
        '#0000FF',
        '#7EC8E3',
        '#0a2d2e',
        '#1c4e4f',
        '#436e6f',
        '#6a8e8f',
        '#a49e97',
        '#deae9f',
        '#efd7cf',
        '#f7ebe7',
        '#ffffff'
    ];


    window.addEventListener('mousemove', 
        function(e){
            mouse.x = e.x;
            mouse.y = e.y;
    });



    class Circle{
        
        constructor(x, y, dx, dy, r){

            this.x = x;
            this.y = y;
            this.dx = dx;
            this.dy = dy;
            this.r = r;
            this.minR = r;
            this.clocr = colorArray[Math.floor(Math.random() * colorArray.length)];
        }

        drow = ()=>{
            c.beginPath();
            c.arc(this.x, this.y, this.r, 2*Math.PI, false);
            c.lineWidth=4;
            c.stroke();
            c.fillStyle = this.clocr;
            c.fill();  
        }

        

            update = ()=>{
            if((this.x+this.r) > innerWidth/2 || (this.x-this.r) < 0){
                this.dx = -this.dx;
            }
            if((this.y+this.r) > innerHeight || (this.y-this.r) < 0){
                this.dy = -this.dy
            }
        
            this.x += this.dx;
            this.y += this.dy;

            if(mouse.x - this.x < 50 && mouse.x - this.x > -50 
            && mouse.y - this.y < 50 && mouse.y - this.y > -50 ){   
                if(this.r < maxR){
                    this.r +=1;
                    
                }
            }else if(this.r > this.minR){
                this.r -=1;
            }

            this.drow()
            c.strokeStyle = 'black';
        }

    }

    // const obj = new circle(200, 200, 4, 4, 80);

    var circleArray = [];
    for(let i=0; i<=100; i++ )
    {
        var x= Math.random() * innerWidth/2;
        var y= Math.random() * innerHeight ;
        var r=9* Math.random() + 3;
        // var r = maxR;
        var dx=(Math.random()-0.5);
        var dy= (Math.random()-0.5);
        circleArray.push(new Circle(x, y, dx, dy, r))
    }


    function anime(){
        requestAnimationFrame(anime);

        c.clearRect(0, 0,  innerWidth/2, innerHeight);
        for(let i=0; i<circleArray.length; i++){
            circleArray[i].update();
        }
        // obj.update();

    }

    anime();

    </script>
  </body>
</html>